[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "minecraft-wiki-bot"
dynamic = ["version"]
description = "A self-hosted Minecraft knowledge chatbot using x.ai API"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
authors = [
    {name = "Web Wizard", email = "webwicz@example.com"},
]
maintainers = [
    {name = "Web Wizard", email = "webwicz@example.com"},
]
keywords = ["minecraft", "chatbot", "rag", "ollama", "nextcloud", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Chat",
    "Topic :: Games/Entertainment",
]
dependencies = [
    "fastapi==0.115.0",
    "uvicorn[standard]==0.32.0",
    "pydantic==2.9.0",
    "pydantic-settings==2.5.2",
    "python-dotenv==1.0.1",
    "requests==2.32.4",
    "beautifulsoup4==4.12.3",
    "lxml==5.3.0",
    "chromadb==0.5.7",
    "sentence-transformers==3.3.0",
    "torch==2.5.0",
    "transformers==4.45.0",
    "numpy==2.0.0",
    "python-multipart==0.0.9",
    "aiofiles==24.1.0",
    "tqdm==4.66.5",
    "streamlit==1.39.0",
    "plotly==5.24.1",
    "scikit-learn==1.7.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "ruff>=0.1.0",
]
docs = [
    "mkdocs>=1.4",
    "mkdocs-material>=9.0",
]

[project.urls]
Homepage = "https://github.com/webwicz/mc_ai"
Repository = "https://github.com/webwicz/mc_ai"
Issues = "https://github.com/webwicz/mc_ai/issues"
Changelog = "https://github.com/webwicz/mc_ai/blob/main/CHANGELOG.md"

[project.scripts]
minecraft-bot = "src.bot.api:app"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.dynamic]
version = {attr = "src.__version__"}

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "sentence_transformers.*",
    "torch.*",
    "transformers.*",
    "nextcloud_api.*",
    "pipline.*",
    "nextcloud_bot.*"
]
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]  # assert false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "src/bot/__main__.py",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B104"]  # Skip hardcoded_bind_all_interfaces - intentional for container deployment
