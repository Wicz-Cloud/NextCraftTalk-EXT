name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run pre-commit hooks
      run: |
        pip install pre-commit
        pre-commit run --all-files

    - name: Run tests
      run: |
        pip install pytest pytest-cov
        pytest --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Bandit Security Scanner
      uses: PyCQA/bandit-action@v1
      with:
        path: "src"

    - name: Run Safety check
      run: |
        pip install safety
        safety check

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: mc-ai:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    runs-on: ubuntu-latest
    needs: [test, security, docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Get version
      id: version
      run: echo "version=$(python -c 'import src; print(src.__version__)')" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: |
          ## What's Changed

          See [CHANGELOG.md](https://github.com/Wicz-Cloud/NextCraftTalk-EXT/blob/main/CHANGELOG.md) for details.

          ### Docker Images
          - `ghcr.io/wicz-cloud/nextcrafttalk-ext:v${{ steps.version.outputs.version }}`
          - `ghcr.io/wicz-cloud/nextcrafttalk-ext:latest`
        draft: false
        prerelease: false
