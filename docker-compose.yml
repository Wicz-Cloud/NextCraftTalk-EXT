version: '3.8'

services:
  # Minecraft Bot Service
  minecraft_bot:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: minecraft_bot
    command: ["python", "-m", "src.bot"]  # Allow overriding with command-line args
    ports:
      - "${BOT_PORT}:${BOT_PORT}"  # Exposes bot API port (default 8111)
    volumes:
      - ./.env:/app/.env            # Mounts environment config
      - ./prompt_template.txt:/app/prompt_template.txt  # Mounts prompt template for editing without restart
      - ./logs:/app/logs            # Mounts application logs for rotation
    environment:
      - NEXTCLOUD_URL=${NEXTCLOUD_URL}      # Nextcloud instance URL
      - NEXTCLOUD_BOT_TOKEN=${NEXTCLOUD_BOT_TOKEN}  # Bot authentication token
      - XAI_API_KEY=${XAI_API_KEY}          # x.ai API key
      - MODEL_NAME=${MODEL_NAME:-grok-4-fast-non-reasoning} # x.ai model name
      - BOT_NAME=${BOT_NAME:-MinecraftBot}  # Bot display name
    networks:
      - minecraft_bot_network
      - nextcloud-aio  # Connects to Nextcloud network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BOT_PORT}/health"]  # Health check endpoint
      interval: 30s

  # Nginx Reverse Proxy (optional, for HTTPS)
  # nginx:
  #   image: nginx:alpine
  #   container_name: minecraft_bot_nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - minecraft_bot
  #   networks:
  #     - nextcloud-aio
  #   restart: unless-stopped
  #   # Comment out if not using reverse proxy

networks:
  minecraft_bot_network:
    driver: bridge
  nextcloud-aio:
    external: true
